name:                backend
version:             0.1.0.0
github:              "githubuser/backend"
author:              "Author name here"
maintainer:          "example@example.com"
copyright:           "2018 Author name here"

extra-source-files:
- README.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/githubuser/backend#readme>

dependencies:
- base >= 4.7 && < 5
- servant
- servant-server
- servant-js
- servant-auth-server
- transformers
- aeson
- wai
- wai-app-static
- warp
- warp-tls
- text
- containers
- template-haskell
- selda >= 0.3.4.0
- selda-sqlite
- bytestring
- filepath
- http-media
- mtl
- http-types
- exceptions
- time

library:
  source-dirs: src
  dependencies: []

executables:
  backend-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - backend

default-extensions:
- Arrows
- BinaryLiterals
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveLift
- DeriveTraversable
- DisambiguateRecordFields
- DoAndIfThenElse
- DuplicateRecordFields
- EmptyCase
- EmptyDataDecls
- ExistentialQuantification
- ExplicitNamespaces
- ExtendedDefaultRules
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GADTSyntax
- GADTs
- ImplicitParams
- ImpredicativeTypes
- TypeFamilyDependencies
- InstanceSigs
- ApplicativeDo
- KindSignatures
- LambdaCase
- LiberalTypeSynonyms
- MonadComprehensions
- MonadFailDesugaring
- NoMonomorphismRestriction
- MultiParamTypeClasses
- MultiWayIf
- NamedFieldPuns
- HexFloatLiterals
- NondecreasingIndentation
- OverloadedLabels
- OverloadedLists
- OverloadedStrings
- PackageImports
- ParallelListComp
- PartialTypeSignatures
- PatternGuards
- PatternSynonyms
- ScopedTypeVariables
- PostfixOperators
- Rank2Types
- RankNTypes
- RecordWildCards
- RecursiveDo
- StandaloneDeriving
- TransformListComp
- TupleSections
- TypeApplications
- TypeFamilies
- TypeOperators
- TypeSynonymInstances
- ViewPatterns
- DeriveAnyClass
- DerivingVia
- AllowAmbiguousTypes
- BlockArguments
